#Checks: '*,-performance-avoid-endl,-misc-const-correctness'
Checks: 'bugprone-*, -bugprone-narrowing-conversions, -bugprone-easily-swappable-parameters, -bugprone-multi-level-implicit-pointer-conversion, clang-*, -clang-analyzer*, hicpp-*,-hicpp-use-auto, -hicpp-no-array-decay, -hicpp-avoid-c-arrays, misc-*, -misc-const-correctness, -misc-include-cleaner, modernize-use-using, modernize-loop-convert, modernize-use-nullptr, modernize-use-emplace, modernize-redundant-void-arg, modernize-use-bool-literals, modernize-use-equals-default, performance-*, -performance-avoid-endl, readability-*, -readability-function-cognitive-complexity, -readability-implicit-bool-conversion, -readability-identifier-length, -readability-magic-numbers, -readability-redundant-control-flow'
# use this to find C math functions which should be replaced by std::
#Checks: 'performance-type-promotion-in-math-fn, -clang-analyzer*'
# use this to optimize string searching
#Checks: 'performance-faster-string-find, -clang-analyzer*'
# working on this - not functional yet
#Checks: 'modernize-*, -modernize-use-trailing-return-type, -modernize-use-auto, -modernize-pass-by-value, performance-*'
#CheckOptions:
#  - key: modernize-use-using
#    value:           'true'
#  - key: modernize-loop-convert
#    value:           'true'
#  - key: modernize-use-trailing-return-type
#    value:           'false'
#  - key: modernize-use-auto
#    value:           '0'
